{
   "name": "@dialexa/pleco-monorepo",
   "version": "0.1.0",
   "description": "A collection of utilities for querying the database",
   "author": "Matthew Kuo <matthew.kuo@dialexa.com>",
   "license": "MIT",
   "repository": "https://github.com/dialexa/pleco",
   "scripts": {
      "build": "tsc --build tsconfig.build.json",
      "lint": "lerna run --concurrency=1 --stream lint",
      "test": "lerna run --parallel --stream test",
      "test:core": "npm run test --scope pleco",
      "test:knex": "npm run test --scope pleco-knex",
      "test:joi": "npm run test --scope pleco-joi",
      "coverage": "lerna run --parallel test:coverage",
      "clean": "git clean -dfqX -- ./node_modules **/{dist,node_modules}/ ./packages/*/tsconfig*tsbuildinfo"
   },
   "husky": {
      "hooks": {
         "pre-commit": "lerna run --concurrency 1 --stream precommit",
         "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
      }
   },
   "devDependencies": {
      "@commitlint/cli": "^8.1.0",
      "@commitlint/config-conventional": "^7.5.0",
      "@dialexa/eslint-config-dialexa": "^5.3.0",
      "@types/chai": "^4.1.7",
      "@types/graphql": "^14.0.5",
      "@types/joi": "^14.3.3",
      "@types/mocha": "^5.2.6",
      "@types/node": "^11.13.5",
      "@typescript-eslint/eslint-plugin": "^1.4.2",
      "@typescript-eslint/parser": "^1.4.2",
      "chai": "^4.2.0",
      "chance": "^1.0.18",
      "coveralls": "^3.0.3",
      "eslint": "^5.15.1",
      "eslint-plugin-import": "^2.17.2",
      "husky": "^1.3.1",
      "knex": "^0.20.9",
      "lerna": "^3.14.0",
      "lint-staged": "^8.1.5",
      "lodash": "^4.17.14",
      "mocha": "^6.1.4",
      "nyc": "^14.1.0",
      "pg": "^7.10.0",
      "ts-node": "^8.1.0",
      "tsconfig-paths": "^3.8.0",
      "typescript": "^3.3.1"
   },
   "dependencies": {
      "@dialexa/pleco": "file:packages/pleco",
      "@dialexa/pleco-graphql": "file:packages/pleco-graphql",
      "@dialexa/pleco-joi": "file:packages/pleco-joi",
      "@dialexa/pleco-knex": "file:packages/pleco-knex"
   }
}
